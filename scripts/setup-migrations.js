// scripts/setup-migrations.js
const fs = require('fs');
const path = require('path');

// Create the necessary directories
const migrationsDir = path.join(__dirname, '..', 'prisma', 'migrations');
const migrationDir = path.join(migrationsDir, '20250423000000_init');

// Make sure the migrations directory exists
if (!fs.existsSync(migrationsDir)) {
  fs.mkdirSync(migrationsDir, { recursive: true });
}

// Make sure the migration directory exists
if (!fs.existsSync(migrationDir)) {
  fs.mkdirSync(migrationDir, { recursive: true });
}

// Create a migration.toml file if it doesn't exist
const migrationToml = path.join(migrationDir, 'migration.toml');
if (!fs.existsSync(migrationToml)) {
  fs.writeFileSync(
    migrationToml,
    '# This is an empty migration_lock file.\n' +
    '# It\'s used by the Prisma Migrate tool to track migrations.\n' +
    '# Please do not edit this file manually.\n' +
    'migration_lock = "10"\n'
  );
}

// Create a migration.sql file if it doesn't exist
const migrationSql = path.join(migrationDir, 'migration.sql');
if (!fs.existsSync(migrationSql)) {
  // Read from SQL template
  const sqlTemplate = path.join(__dirname, '..', 'sql.txt');
  if (fs.existsSync(sqlTemplate)) {
    fs.copyFileSync(sqlTemplate, migrationSql);
    console.log('Migration SQL file created from template');
  } else {
    console.log('SQL template not found, creating empty migration file');
    fs.writeFileSync(migrationSql, '-- Empty migration file\n');
  }
}

// Create a migration_lock.toml file if it doesn't exist
const migrationLockToml = path.join(migrationsDir, 'migration_lock.toml');
if (!fs.existsSync(migrationLockToml)) {
  fs.writeFileSync(
    migrationLockToml,
    '# Please do not edit this file manually\n' +
    '# It should be added in your version-control system (i.e. Git)\n' +
    'provider = "postgresql"\n'
  );
}

console.log('Migration files setup complete');
